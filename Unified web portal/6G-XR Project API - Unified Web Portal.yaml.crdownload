openapi: 3.0.3
info:
  title: 6G-XR Project API - Unified Web Portal
  version: 1.0.0
  description: This document provides an overview of the available 6G-XR project APIs.
paths:
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /home/api/checknstid/:
    post:
      operationId: home_api_checknstid_create
      tags:
      - home
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /home/api/gettrialfornst/:
    post:
      operationId: home_api_gettrialfornst_create
      tags:
      - home
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /home/api/gettrials/:
    post:
      operationId: home_api_gettrials_create
      tags:
      - home
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /home/api/gettrialstimefornst/:
    post:
      operationId: home_api_gettrialstimefornst_create
      tags:
      - home
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /home/api/trials/:
    post:
      operationId: home_api_trials_create
      tags:
      - home
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: home_api_trials_update
      tags:
      - home
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: home_api_trials_destroy
      tags:
      - home
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /home/api/trials/{trial_id}/:
    get:
      operationId: home_api_trials_retrieve
      description: 'This view is just for South service:'
      parameters:
      - in: path
        name: trial_id
        schema:
          type: integer
        required: true
      tags:
      - home
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/api/Passresetconfirmtion/:
    post:
      operationId: users_api_Passresetconfirmtion_create
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/api/codeverification/:
    post:
      operationId: users_api_codeverification_create
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/api/passresreq/:
    post:
      operationId: users_api_passresreq_create
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/api/token/:
    post:
      operationId: users_api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      responses:
        '200':
          description: No response body
  /users/api/users/delete/:
    delete:
      operationId: users_api_users_delete_destroy
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /users/api/users/edit/:
    get:
      operationId: users_api_users_edit_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: users_api_users_edit_update
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/api/users/login/:
    post:
      operationId: users_api_users_login_create
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/api/users/logout/:
    post:
      operationId: users_api_users_logout_create
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/api/users/profile/:
    post:
      operationId: users_api_users_profile_create
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/api/users/register/:
    post:
      operationId: users_api_users_register_create
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    CustomTokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: http://localhost:8000
  description: Local
